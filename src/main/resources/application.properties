#고정에 가까운 일부 세팅을 제외하고 대부분의 값은 환경변수를 통해 세팅
#application.properties 파일을 가능한 고정으로 두고, .env파일의 세팅을 외부에서 주입받는 방식을 사용해 유연하게 관리하는 것을 의도
#env 파일은 외부 주입하는 구조를 염두에 두고 있음(환경 세팅되기 전까지 dev에서는 수동으로 파일 추가)
#토큰 등 민감 정보는 무조건 .env 파일을 통해 환경변수로 세팅할 것

spring.application.name=pick-team

#port
server.port=${PORT_NO}

#env 파일 사용
spring.config.import=optional:file:.env[.properties]

# DB 연결 설정
#spring.jpa.database Deprecated 됨 -> Spring에서 자동 감지한다.
#spring.jpa.database=${DATABASE_TYPE}
spring.datasource.driver-class-name=${DB_DRIVER}
spring.datasource.url=jdbc:mysql://${DB_URL}/${DB_NAME}?serverTimezone=${TZ}&characterEncoding=${DB_CHARACTER_ENCODING}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# JPA 설정
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.open-in-view=${JPA_OPEN_IN_VIEW}
spring.jpa.properties.hibernate.connection.characterEncoding=${DB_MYSQL_CHARACTER_SET_SERVER}

#dialect 명시하는 부분 Deprecated됨 -> Spring에서 자동 감지한다.
#Warn 뜨는 거 귀찮아서 일부러 주석처리한 것. 두 설정 모두 마찬가지임. hibernate쪽 옵션이 좀 더 현대적인 스펙임
#spring.jpa.properties.hibernate.dialect=${JPA_DIALECT}
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#유니코드는 항시 사용하므로 true 고정
spring.jpa.properties.hibernate.connection.useUnicode=true

#log
logging.level.root=${LOG_LEVEL_ROOT:info}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:debug}
logging.level.org.springframework.orm.jpa.JpaTransactionManager=${LOG_LEVEL_TX:debug}
logging.level.org.springframework.transaction.interceptor.TransactionInterceptor=${LOG_LEVEL_INTERCEPTOR:trace}

# 이메일 설정
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:true}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_SMTP_STARTTLS_REQUIRED:true}

# JWT 설정
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION}
app.jwt.refresh-token.expiration-days=${JWT_REFRESH_TOKEN_EXPIRATION_DAYS}